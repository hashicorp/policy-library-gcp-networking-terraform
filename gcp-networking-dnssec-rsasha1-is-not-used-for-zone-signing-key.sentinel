import "tfplan/v2" as tfplan

allDNSManagedZones = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.type is "google_dns_managed_zone" and
		resource_changes.mode is "managed" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

print("CIS 3.5: Ensure that RSASHA1 is not used for zone-signing key in Cloud DNS DNSSEC")

deny_undefined_dnssec_config = rule {
	all allDNSManagedZones as _, zone {
		keys(zone.change.after) contains "dnssec_config" and
			length(zone.change.after.dnssec_config else []) != 0
	}
}

deny_rsasha1_zone_signing = rule when deny_undefined_dnssec_config is true {
	all allDNSManagedZones as _, zone {
		all zone.change.after.dnssec_config as _, dnssec_config {
			all filter dnssec_config.default_key_specs as default_key_spec {
				default_key_spec.key_type is "zoneSigning"
			} as dks {
				dks.algorithm is not "rsasha1"
			}
		}
	}
}

main = rule {
	deny_rsasha1_zone_signing
}
