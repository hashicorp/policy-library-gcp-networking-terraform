import "tfplan/v2" as tfplan

allDNSManagedZones = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.type is "google_dns_managed_zone" and
		resource_changes.mode is "managed" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

print("3.3: Ensure that DNSSEC is enabled for Cloud DNS")

deny_undefined_dnssec_config = rule {
	all allDNSManagedZones as _, zone {
		keys(zone.change.after) contains "dnssec_config" and
			length(zone.change.after.dnssec_config else []) != 0
	}
}

deny_insecure_dns_managed_zones = rule when deny_undefined_dnssec_config is true {
	all allDNSManagedZones as _, zone {
		all zone.change.after.dnssec_config as _, dnssec_config {
			dnssec_config.state is "on"
		}
	}
}

main = rule {
	deny_undefined_dnssec_config and
	deny_insecure_dns_managed_zones
}
